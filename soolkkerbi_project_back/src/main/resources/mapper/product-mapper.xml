<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.skb.product.model.dao.ProductDao">
	<select id="totalCount" resultType="int">
		select count(*) from product
	</select>
	
	<select id="selectAllProduct" resultType="product">
		select * from
			(select rownum as rnum, p.* from
				(select * from product order by 1) p
			)
		where rnum between #{start} and #{end}
	</select>
	
	<update id="updateStock">
		update product set product_stock = #{productStock} where product_no = #{productNo}
	</update>
	
	<insert id="insertProduct">
	  	insert into product values (product_seq.nextval,#{productCase},#{productName},#{productAlc},#{productLiter},
	  								#{productInfo},#{productPrice},#{productStock},0,#{productFilepath})
	</insert>
	
	<select id="selectTakjuList" resultType="product">
	SELECT * FROM
	    (SELECT ROWNUM AS RNUM, P.* FROM 
	        (SELECT
	            PRODUCT_NO,
	            PRODUCT_CASE,
	            PRODUCT_NAME,
	            PRODUCT_ALC,
	            PRODUCT_LITER,
	            PRODUCT_INFO,
	            PRODUCT_PRICE,
	            PRODUCT_STOCK,
	            PRODUCT_DISCOUNT,
	            PRODUCT_FILEPATH,
	            (SELECT AVG(REVIEW_RATE) FROM REVIEW WHERE REVIEW_PRODUCT_NO=PRODUCT_NO) AS STAR_RATE,
	            (SELECT COUNT(*) FROM FAVORITE WHERE FAVORITE_MEMBER_NO = (SELECT MEMBER_NO FROM MEMBER WHERE MEMBER_ID=#{memberId}) and FAVORITE_PRODUCT_NO = PRODUCT_NO) AS IS_LIKE
	        FROM PRODUCT
	        WHERE PRODUCT_CASE = 1
	        ORDER BY 1 DESC)P)
	WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectYakjuList" resultType="product">
	SELECT * FROM
	    (SELECT ROWNUM AS RNUM, P.* FROM 
	        (SELECT
	            PRODUCT_NO,
	            PRODUCT_CASE,
	            PRODUCT_NAME,
	            PRODUCT_ALC,
	            PRODUCT_LITER,
	            PRODUCT_INFO,
	            PRODUCT_PRICE,
	            PRODUCT_STOCK,
	            PRODUCT_DISCOUNT,
	            PRODUCT_FILEPATH,
	            (SELECT AVG(REVIEW_RATE) FROM REVIEW WHERE REVIEW_PRODUCT_NO=PRODUCT_NO) AS STAR_RATE,
	            (SELECT COUNT(*) FROM FAVORITE WHERE FAVORITE_MEMBER_NO = (SELECT MEMBER_NO FROM MEMBER WHERE MEMBER_ID=#{memberId}) and FAVORITE_PRODUCT_NO = PRODUCT_NO) AS IS_LIKE
	        FROM PRODUCT
	        WHERE PRODUCT_CASE = 2
	        ORDER BY 1 DESC)P)
	WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectFruitList" resultType="product">
	SELECT * FROM
	    (SELECT ROWNUM AS RNUM, P.* FROM 
	        (SELECT
	            PRODUCT_NO,
	            PRODUCT_CASE,
	            PRODUCT_NAME,
	            PRODUCT_ALC,
	            PRODUCT_LITER,
	            PRODUCT_INFO,
	            PRODUCT_PRICE,
	            PRODUCT_STOCK,
	            PRODUCT_DISCOUNT,
	            PRODUCT_FILEPATH,
	            (SELECT AVG(REVIEW_RATE) FROM REVIEW WHERE REVIEW_PRODUCT_NO=PRODUCT_NO) AS STAR_RATE,
	            (SELECT COUNT(*) FROM FAVORITE WHERE FAVORITE_MEMBER_NO = (SELECT MEMBER_NO FROM MEMBER WHERE MEMBER_ID=#{memberId}) and FAVORITE_PRODUCT_NO = PRODUCT_NO) AS IS_LIKE
	        FROM PRODUCT
	        WHERE PRODUCT_CASE = 3
	        ORDER BY 1 DESC)P)
	WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectSpiritsList" resultType="product">
	SELECT * FROM
	    (SELECT ROWNUM AS RNUM, P.* FROM 
	        (SELECT
	            PRODUCT_NO,
	            PRODUCT_CASE,
	            PRODUCT_NAME,
	            PRODUCT_ALC,
	            PRODUCT_LITER,
	            PRODUCT_INFO,
	            PRODUCT_PRICE,
	            PRODUCT_STOCK,
	            PRODUCT_DISCOUNT,
	            PRODUCT_FILEPATH,
	            (SELECT AVG(REVIEW_RATE) FROM REVIEW WHERE REVIEW_PRODUCT_NO=PRODUCT_NO) AS STAR_RATE,
	            (SELECT COUNT(*) FROM FAVORITE WHERE FAVORITE_MEMBER_NO = (SELECT MEMBER_NO FROM MEMBER WHERE MEMBER_ID=#{memberId}) and FAVORITE_PRODUCT_NO = PRODUCT_NO) AS IS_LIKE
	        FROM PRODUCT
	        WHERE PRODUCT_CASE = 4
	        ORDER BY 1 DESC)P)
	WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<insert id="insertLike">
	insert into favorite values(favorite_seq.nextval, (select member_no from member where member_id=#{memberId}), #{productNo})
	</insert>
	
	<delete id="deleteLike">
	delete from favorite where favorite_member_no=(select member_no from member where member_id=#{memberId}) and favorite_product_no=#{productNo}
	</delete>
	
	<update id="updatePayStock">
		update product set product_stock = product_stock + #{payStock} where product_no = #{payProductNo}
	</update>

	<select id="selectOneProduct" resultType="product">
		select * from product where product_no=#{productNo}
	</select>
	<!-- 
	select l.*,
		    (select count(*) from favorite where favorite_member_no=(select member_no from member where member_id=#{memberId}) and favorite_product_no=product_no)as is_like
		from (select * from product where product_no=#{productNo})l
	 -->
	<select id="likeList" resultType="product">
		select rownum as rnum, f.* from
			(select 
				favorite_product_no,
				product_no, 
				product_name, 
				product_filepath, 
				product_stock,
				(select count(*) from favorite where favorite_member_no = (select member_no from member where member_id='user00') and favorite_product_no = product_no) as is_like
			from favorite 
			join product on (favorite_product_no = product_no) 
			where favorite_member_no=(select member_no from member where member_id=#{memberId}) order by 1 desc)f
	</select>
</mapper>